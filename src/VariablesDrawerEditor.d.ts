/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/VariablesDrawerEditor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html} from 'lit-element';

import {ArcOverlayMixin} from '@advanced-rest-client/arc-overlay-mixin/arc-overlay-mixin.js';

export {VariablesDrawerEditor};

declare namespace UiElements {

  /**
   * A drawer like element to display variables editor.
   * Internally it uses `<variables-editor>` as a main element. The drawer is rendered
   * as a right hand side drawer of the application.
   *
   * Suggested use with `with-backdrop` attribute set. Otherwise it should be styled
   * to distinguish opened element from the rest of the application.
   *
   * ### Example
   *
   * ```html
   * <variables-drawer-editor with-backdrop></variables-drawer-editor>
   * ```
   *
   * ### Styling
   *
   * `<variables-drawer-editor>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--variables-drawer-editor` | Mixin applied to the element | `{}`
   * `--variables-drawer-editor-min-width` | Minimum width of the variables editor's drawer | `460px`
   * `--variables-drawer-editor-width` | Width of the drawer | `40%`
   * `--variables-drawer-editor-background-color` | Background color od the drawer | `#fff`
   * `--arc-font-headline` | Mixin applied to the title of the drawer | `{}`
   * `--variables-drawer-editor-close-color` | Color of the close icon | ``
   * `--variables-drawer-editor-close-background-color` | Background color of the close icon | ``
   */
  class VariablesDrawerEditor extends
    Polymer.IronOverlayBehavior(
    Object) {

    /**
     * Enables compatibility with Anypoint platform
     */
    compatibility: boolean|null|undefined;

    /**
     * Enables Material Design Outlined inputs
     */
    outlined: boolean|null|undefined;
    render(): any;
    connectedCallback(): void;
  }
}
